{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\masksdetection-react-native-app\\\\node_modules\\\\react-native-elements\\\\src\\\\checkbox\\\\CheckBoxIcon.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FAIcon from \"@expo/vector-icons/FontAwesome\";\nimport getIconType from \"../helpers/getIconType\";\n\nvar CheckBoxIcon = function CheckBoxIcon(_ref) {\n  var checked = _ref.checked,\n      onIconPress = _ref.onIconPress,\n      onLongIconPress = _ref.onLongIconPress,\n      size = _ref.size,\n      checkedIcon = _ref.checkedIcon,\n      uncheckedIcon = _ref.uncheckedIcon,\n      iconType = _ref.iconType,\n      checkedColor = _ref.checkedColor,\n      uncheckedColor = _ref.uncheckedColor;\n\n  if (checked && React.isValidElement(checkedIcon)) {\n    return checkedIcon;\n  }\n\n  if (!checked && React.isValidElement(uncheckedIcon)) {\n    return uncheckedIcon;\n  }\n\n  var VectorIcon = iconType ? getIconType(iconType) : FAIcon;\n  return React.createElement(VectorIcon, {\n    color: checked ? checkedColor : uncheckedColor,\n    name: checked ? checkedIcon : uncheckedIcon,\n    size: size || 24,\n    style: {\n      minWidth: size || 24\n    },\n    onLongPress: onLongIconPress,\n    onPress: onIconPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\nCheckBoxIcon.propTypes = {\n  checked: PropTypes.bool,\n  onIconPress: PropTypes.func,\n  onLongIconPress: PropTypes.func,\n  size: PropTypes.number,\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  iconType: PropTypes.string,\n  checkedColor: PropTypes.string,\n  uncheckedColor: PropTypes.string\n};\nexport default CheckBoxIcon;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/masksdetection-react-native-app/node_modules/react-native-elements/src/checkbox/CheckBoxIcon.js"],"names":["React","PropTypes","FAIcon","getIconType","CheckBoxIcon","checked","onIconPress","onLongIconPress","size","checkedIcon","uncheckedIcon","iconType","checkedColor","uncheckedColor","isValidElement","VectorIcon","minWidth","propTypes","bool","func","number","oneOfType","string","element"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP;AAEA,OAAOC,WAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAUf;AAAA,MATJC,OASI,QATJA,OASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,eAOI,QAPJA,eAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,cACI,QADJA,cACI;;AACJ,MAAIR,OAAO,IAAIL,KAAK,CAACc,cAAN,CAAqBL,WAArB,CAAf,EAAkD;AAChD,WAAOA,WAAP;AACD;;AAED,MAAI,CAACJ,OAAD,IAAYL,KAAK,CAACc,cAAN,CAAqBJ,aAArB,CAAhB,EAAqD;AACnD,WAAOA,aAAP;AACD;;AAED,MAAMK,UAAU,GAAGJ,QAAQ,GAAGR,WAAW,CAACQ,QAAD,CAAd,GAA2BT,MAAtD;AAEA,SACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEG,OAAO,GAAGO,YAAH,GAAkBC,cADlC;AAEE,IAAA,IAAI,EAAER,OAAO,GAAGI,WAAH,GAAiBC,aAFhC;AAGE,IAAA,IAAI,EAAEF,IAAI,IAAI,EAHhB;AAIE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAER,IAAI,IAAI;AAApB,KAJT;AAKE,IAAA,WAAW,EAAED,eALf;AAME,IAAA,OAAO,EAAED,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CA/BD;;AAiCAF,YAAY,CAACa,SAAb,GAAyB;AACvBZ,EAAAA,OAAO,EAAEJ,SAAS,CAACiB,IADI;AAEvBZ,EAAAA,WAAW,EAAEL,SAAS,CAACkB,IAFA;AAGvBZ,EAAAA,eAAe,EAAEN,SAAS,CAACkB,IAHJ;AAIvBX,EAAAA,IAAI,EAAEP,SAAS,CAACmB,MAJO;AAKvBX,EAAAA,WAAW,EAAER,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACsB,OAA7B,CAApB,CALU;AAMvBb,EAAAA,aAAa,EAAET,SAAS,CAACoB,SAAV,CAAoB,CAACpB,SAAS,CAACqB,MAAX,EAAmBrB,SAAS,CAACsB,OAA7B,CAApB,CANQ;AAOvBZ,EAAAA,QAAQ,EAAEV,SAAS,CAACqB,MAPG;AAQvBV,EAAAA,YAAY,EAAEX,SAAS,CAACqB,MARD;AASvBT,EAAAA,cAAc,EAAEZ,SAAS,CAACqB;AATH,CAAzB;AAYA,eAAelB,YAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FAIcon from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport getIconType from '../helpers/getIconType';\r\n\r\nconst CheckBoxIcon = ({\r\n  checked,\r\n  onIconPress,\r\n  onLongIconPress,\r\n  size,\r\n  checkedIcon,\r\n  uncheckedIcon,\r\n  iconType,\r\n  checkedColor,\r\n  uncheckedColor,\r\n}) => {\r\n  if (checked && React.isValidElement(checkedIcon)) {\r\n    return checkedIcon;\r\n  }\r\n\r\n  if (!checked && React.isValidElement(uncheckedIcon)) {\r\n    return uncheckedIcon;\r\n  }\r\n\r\n  const VectorIcon = iconType ? getIconType(iconType) : FAIcon;\r\n\r\n  return (\r\n    <VectorIcon\r\n      color={checked ? checkedColor : uncheckedColor}\r\n      name={checked ? checkedIcon : uncheckedIcon}\r\n      size={size || 24}\r\n      style={{ minWidth: size || 24 }}\r\n      onLongPress={onLongIconPress}\r\n      onPress={onIconPress}\r\n    />\r\n  );\r\n};\r\n\r\nCheckBoxIcon.propTypes = {\r\n  checked: PropTypes.bool,\r\n  onIconPress: PropTypes.func,\r\n  onLongIconPress: PropTypes.func,\r\n  size: PropTypes.number,\r\n  checkedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  uncheckedIcon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  iconType: PropTypes.string,\r\n  checkedColor: PropTypes.string,\r\n  uncheckedColor: PropTypes.string,\r\n};\r\n\r\nexport default CheckBoxIcon;\r\n"]},"metadata":{},"sourceType":"module"}